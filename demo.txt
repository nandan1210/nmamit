Data Structures Using Java:
============================
Simplest form of Data Structure:
-----------------------------------
Implementation Of Array:
==========================
int x=8;
float y=9;
-------------
int x;
x=9
------------
1.Declaration and Initialisation Together:
-------------------------------------------
int[] x={5,7,6,4};
float x1[]={4.5,7.8,9.7};
-------------------------------------------
2.int[] arr=new int[7];
--------------------------------------------
1.Write a program to implement the traversal of 
  an array.
---------------------------------------------------
2.Shift The negative numbers of an array to the left 
corner.
 input     3,7,9,-2,6,-5,8,-7,10
 output   -2,-5,-7,3,6,7,8,9,10
-------------------------------------------------------------------
3.Linear Search
    
   

4.Binary Search
====================================
first element will be replaced by last element
remaining elements by their preceeding elements
=====================================================
Arrange a array with positive and negative elements adjusted alternatively
input   -7,9,8,-5,-6,12,13,-16,15,24,-14,-21
output  9,-7,8,-5,12,-6,13,-16,15,-14,24,-21 
=================================================================================
Find The Occurrence of a given integer in an array
  array  :  2,3,4,7,4,8,9,4,2,3,2,4,7
  input:   2   4  7
  output:  3   4  2
=================================================================================
Stock Span Problem:
=======================
Minimum Platforms Requirement Problem:
===========================================
arrival=====>7:00,7:15,7:45,8:10,8:15,9:00,9:05,9:25
departure===>7:05,7:50,7:55,8:39,8:55,9:40,9:35,
=================================================================
Collections Framework:
=======================
Iterable(Interface)

     Collection(Interface)
   
       List(Interface)     Set(Interface)    Map(Interface)       
         
         ArrayList(Class)
         Linkedlist(Class)
         Vector(Class)
==================================================================================
arr1 ==> [10, 20, 30, 40, 50] 
Iterator itr=arr1.iterator()
 while(itr.hasNext()){
        System.out.println(itr.next);
   }
===================================================================================
Write a program to check whether two given strings are 
isomorphic or not.
s1=aab   aab   abc
s2=pqr   ppq   pqr
"no of distinct characters should be equal in both strings"
==============================================================================
Linked Lists:
================

































 






















 









































 



