Operators:
------------
1.Arithmetic Operators
2.BitWise Operators
    Logical Operators===>& | ^
    Shift Operators==>left shift,right shift
========================
123 & 246
=================================
123>>3
245<<2
========================================
if(condition)
  statement1;
else
  statement2;
-----------------------------
ternary operator:
--------------------
(condition)?statement1:statement
===============================================================================================
Imlementation Of Arrays
---------------------------
int  arr[]={3,6,8,7,4,9}
size=6

int arr[]=new int[5];
-------------------------------------------
Write a program to reverse an array.
--------------------------------------
int start=0;
int end=arr.length-1;
while(start<end){
  swap arr[start]<==>arr[end];
  start++;
  end--;
}
---------------------------------------
write a program to arrange an array having equal no of negative and positive integers in such a way that negative 
nos lies in the left corner and positive nos lie in right corner
input:   4,6,-3,-4,9,-2
output:  -3,-4,-2,4,6,9
==============================================
overallmax=0
currentmax=0
for(i=0;i<n;i++){
if(currentmax > overallmax)
  overallmax=currentmax;
if(currentmax<0)
  currentmax=0;
currentmax=currentmax+arr[i];
}
=====================================================
Look And Say Pattern:
------------------------
n=5
1,11,21,1211,111221

n=7
1,11,21,1211,111221,312211,13112221 
=================================================
1.Find The Height Of A Binary Tree.
2.Write a program to count the no of nodes in a
  Binary Tree.
================================================
Exception Handling
-----------------------
exceptions===>run time
exception handling
=================================
try===>which generates the exception
catch===>which handels the exception
finally

throws===>to declare the possibility of exception
throw===>to generate the exception
---------------------------------------------------------------------
catch block is executed only when there is exception
finally block is always executed
=====================================================================
throws====>to declare that exception may generate
========================================================
Define the exception if a program adding two numbers is taking 
either of zero values
a=5,b=7     a+b=12
a=0,b=4     exception
a=6,b=0     exception 
====================================================================================================================================
Write a java program to validate method that takes integer value as a parameter,If the age is less than 18 ,it throws exception.Also Write try and catch to handle exception.Otherwise 
send a message "Welcome To Vote".

Enter Your Age:
input:19
Output: You Are Welcome To Vote
----------------------------------------------
input:15
Output: Sorry!You Are Not Eligible To Vote
=========================================================
User Defined Exceptions(Custom Exceptions):
===========================================
Exception
ArithmeticException
FileNotFoundException
IOException
ArrayIndexOutOfBoundsException
"all above are pre defined exception classes"
=============================================================
Define your own exception class
---------------------------------
Read and Write Streams:
==========================
Stream===>flow of data
Read Stream===>Input Stream
System.in
class===>FileInputStream
Write Stream===>Output Stream
System.out

class===>FileOutputStream
===============================================
Abstraction:
------------------
1.Abstract Classes
------------------------
classes which cannot be instantiated

2.Abstract Methods

3.Interfaces
=================================
class===>instated
Interface===>cannot be instantiated
------------------------------------------
classes===>guidelines
interfaces===>rules
-----------------------------------
class==>may be partially abstract or not abstract
interface===>fully abstract
--------------------------------------------------------
Whenver a class implements an interface it should implement all
its abstract methods
===============================================================
Inheritence in Interfaces:
--------------------------------
interface A
interface B extends A
interface C extends B
------------------------------------------------------------
Write a program to demonstrate inheritance in interfaces























































































 































































    